From 879ce7dc294083fca8df35b7db387f8c9824c1a4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Nacho=20Garc=C3=ADa?= <nacho.garglez@gmail.com>
Date: Wed, 20 Feb 2019 15:44:38 +0100
Subject: [PATCH] Giscanner fix shared library name with Meson on macOS

---
 giscanner/shlibs.py | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/giscanner/shlibs.py b/giscanner/shlibs.py
index 8b4924d..7396342 100644
--- a/giscanner/shlibs.py
+++ b/giscanner/shlibs.py
@@ -38,6 +38,21 @@ def _resolve_libtool(options, binary, libraries):
 
     return shlibs
 
+def _sanitize_install_name(install_name):
+    '''
+    On macOS, the dylib can be built with install_name as @rpath/libfoo.so
+    instead of the absolute path to the library, so handle that. The name
+    can also be @loader_path or @executable_path.
+    '''
+    if not install_name.startswith('@'):
+        return install_name
+    if install_name.startswith('@rpath/'):
+        return install_name[7:]
+    if install_name.startswith('@loader_path/'):
+        return install_name[13:]
+    if install_name.startswith('@executable_path/'):
+        return install_name[17:]
+    raise RuntimeError('Unknown install_name {!r}'.format(install_name))
 
 # Assume ldd output is something vaguely like
 #
@@ -131,7 +146,7 @@ def resolve_from_ldd_output(libraries, output, basename=False):
                 m = pattern.match(word)
                 if m:
                     del patterns[library]
-                    shlibs.append(m.group())
+                    shlibs.append(_sanitize_install_name(m.group()))
                     break
 
     if len(patterns) > 0:
-- 
2.11.0

