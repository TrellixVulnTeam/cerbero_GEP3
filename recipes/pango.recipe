# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import shutil


class Recipe(recipe.Recipe):
    name = 'pango'
    version = '1.36.8'
    stype = SourceType.TARBALL
    url = 'http://ftp.acc.umu.se/pub/GNOME/sources/pango/1.36/pango-1.36.8.tar.xz'
    autoreconf = True
    autoreconf_sh = 'ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS" autoreconf -ivf '
    licenses = [License.LGPLv2Plus]
    configure_options = '--with-included-modules --enable-static --disable-gtk-doc'
    deps = ['cairo', 'fontconfig', 'freetype', 'gtk-doc-lite', 'harfbuzz']

    files_libs = ['libpangocairo-1.0', 'libpango-1.0', 'libpangoft2-1.0']
    files_bins = ['pango-querymodules']
    platform_files_fonts = {
        Platform.WINDOWS: ['etc/pango/pango.aliases'],
    }
    files_devel = ['include/pango-1.0',
        'lib/pkgconfig/pangoft2.pc', 'lib/pkgconfig/pango.pc',
        'lib/pkgconfig/pangocairo.pc']
    platform_files_libs = {
        Platform.WINDOWS: ['libpangowin32-1.0'],
    }
    platform_files_devel = {
        Platform.WINDOWS: ['lib/pkgconfig/pangowin32.pc'],
        Platform.LINUX: ['lib/pkgconfig/pango.pc'],
    }

    def configure(self):
        super(Recipe, self).configure()
        shell.replace(os.path.join(self.build_dir, 'Makefile'),
           {'SUBDIRS = pango modules pango-view examples docs tools tests build':
            'SUBDIRS = pango modules build'})

    def post_install(self):
        if self.config.target_platform == Platform.WINDOWS:
            pango_path= os.path.join(self.config.prefix, "etc/pango/")
            if not os.path.exists(pango_path):
                os.mkdir(pango_path)
            shutil.copy(self.relative_path("pango/pango.aliases"), pango_path)

