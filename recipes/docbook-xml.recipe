# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

class Recipe(recipe.Recipe):
    name = 'docbook-xml'
    version = '4.3'
    # FIXME - no license defined
    licenses = []
    btype = BuildType.CUSTOM

    files_docbook = ['share/xml/docbook/stylesheet/dockbook/dbhierx.mod',
                    'share/xml/docbook/stylesheet/dockbook/docbook.cat',
                    'share/xml/docbook/stylesheet/dockbook/htmltblx.mod',
                    'share/xml/docbook/stylesheet/dockbook/dbcentx.mod',
                    'share/xml/docbook/stylesheet/dockbook/dbnotnx.mod',
                    'share/xml/docbook/stylesheet/dockbook/docbookx.dtd',
                    'share/xml/docbook/stylesheet/dockbook/calstblx.dtd',
                    'share/xml/docbook/stylesheet/dockbook/catalog.xml',
                    'share/xml/docbook/stylesheet/dockbook/dbgenent.mod',
                    'share/xml/docbook/stylesheet/dockbook/dbpoolx.mod',
                    'share/xml/docbook/stylesheet/dockbook/soextblx.dtd',
                    'share/xml/docbook/stylesheet/dockbook/ent']
    files_catalog = ['etc/xml/catalog']

    def install(self):
        # Install the dockbook files
        docbook_path = os.path.join(self.config.prefix, 'share', 'xml', 'docbook', 'stylesheet', 'dockbook')
        if not os.path.exists(docbook_path):
            os.makedirs(docbook_path)
        for f in self.files_docbook:
            shell.call('cp -rf %s %s' % (os.path.basename(f), docbook_path), self.build_dir)

        # Generate the catalog file
        etc_path =  os.path.join(self.config.prefix, 'etc', 'xml')
        if not os.path.exists(etc_path):
            os.makedirs(etc_path)
        etc_catalog_path = os.path.join(etc_path, 'catalog')
        new_catalog_path = os.path.join(self.build_dir, 'catalog.xml')

        def read_catalog(path):
            try:
                with open(path, 'r') as f:
                    lines= f.readlines()
                    if len(lines) != 0:
                        lines = lines[2:-1]
            except Exception, ex:
                lines = ['']
            return ''.join(lines)

        etc_catalog_lines = read_catalog(etc_catalog_path)
        new_catalog_lines = read_catalog(new_catalog_path)
        new_catalog_lines_replaced = new_catalog_lines.replace('uri="', 'uri="%s/' % docbook_path)

        if new_catalog_lines_replaced in etc_catalog_lines:
            return
        with open(etc_catalog_path, 'w') as f:
            f.write("<?xml version='1.0'?>\n")
            f.write('<catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog">\n')
            f.write(etc_catalog_lines)
            f.write("\n")
            f.write(new_catalog_lines_replaced)
            f.write("</catalog>")
