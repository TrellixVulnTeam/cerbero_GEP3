# vi:si:et:sw=4:sts=4:ts=4:syntax=python
# -*- Mode: Python -*-
import os


class Package(package.Package):
    name = 'vas-deps'
    shortdesc  = 'VAS dependencies'
    longdesc  = 'Video Analysis Solution dependencies'
    files = ['ubuntu-font-family:fonts',
             'gtk-sharp',
             'libglade:libs',
             'sqlite3:libs',
             'db4o:cli',
             'fontconfig:bins',
             ]
    platform_files = {
        Platform.DARWIN: ['Sparkle', 'Xamarin.Mac'],
        Platform.WINDOWS: ['WinSparkle'],
    }


    def files_list(self):
        r = package.Package.files_list(self)
        r += [
            'lib/mono/4.5/mscorlib.dll',
            'lib/mono/4.5/Mono.Cairo.dll',
            'lib/mono/4.5/Mono.Data.Tds.dll',
            'lib/mono/4.5/Mono.Posix.dll',
            'lib/mono/4.5/Mono.Security.dll',
            'lib/mono/4.5/Mono.Security.dll',
            'lib/mono/4.5/Mono.CSharp.dll',
            'lib/mono/4.5/Microsoft.CSharp.dll',
            'lib/mono/4.5/System.dll',
            'lib/mono/4.5/System.ComponentModel.Composition.dll',
            'lib/mono/4.5/System.ComponentModel.DataAnnotations.dll',
            'lib/mono/4.5/System.Configuration.dll',
            'lib/mono/4.5/System.Configuration.Install.dll',
            'lib/mono/4.5/System.Core.dll',
            'lib/mono/4.5/System.Data.dll',
            'lib/mono/4.5/System.Drawing.dll',
            'lib/mono/4.5/System.EnterpriseServices.dll',
            'lib/mono/4.5/System.Management.dll',
            'lib/mono/4.5/System.Net.Http.dll',
            'lib/mono/4.5/System.Net.Http.WebRequest.dll',
            'lib/mono/4.5/System.Numerics.dll',
            'lib/mono/4.5/System.Runtime.Serialization.dll',
            'lib/mono/4.5/System.Security.dll',
            'lib/mono/4.5/System.ServiceModel.Internals.dll',
            'lib/mono/4.5/System.Transactions.dll',
            'lib/mono/4.5/System.Xml.dll',
            'lib/mono/4.5/System.Xml.Linq.dll',
            'lib/mono/4.5/System.Xaml.dll',
            'lib/mono/4.5/WindowsBase.dll',
            'lib/mono/4.5/Facades/System.Collections.dll',
            'lib/mono/4.5/Facades/System.Diagnostics.Debug.dll',
            'lib/mono/4.5/Facades/System.Diagnostics.Tools.dll',
            'lib/mono/4.5/System.Windows.Forms.dll',
            'lib/mono/4.5/Facades/System.Globalization.dll',
            'lib/mono/4.5/Facades/System.IO.dll',
            'lib/mono/4.5/Facades/System.Linq.dll',
            'lib/mono/4.5/Facades/System.Resources.ResourceManager.dll',
            'lib/mono/4.5/Facades/System.Reflection.dll',
            'lib/mono/4.5/Facades/System.Reflection.Extensions.dll',
            'lib/mono/4.5/Facades/System.Runtime.dll',
            'lib/mono/4.5/Facades/System.Runtime.Extensions.dll',
            'lib/mono/4.5/Facades/System.Text.Encoding.dll',
            'lib/mono/4.5/Facades/System.Text.RegularExpressions.dll',
            'lib/mono/4.5/Facades/System.Threading.dll',
            'lib/mono/4.5/Facades/System.Threading.Tasks.dll',
        ]
        if self.config.target_platform == Platform.LINUX:
            prefix = self.config.prefix
            if not prefix.endswith('/'):
                prefix += '/'
            files = []
            for x in r:
                p = os.path.realpath(os.path.join(prefix, x))
                files.append(p.replace(prefix, ''))
                config = p+'.config'
                if os.path.exists(config):
                    files.append(config.replace(prefix, ''))
            r = list(set(r+files))
        return r
